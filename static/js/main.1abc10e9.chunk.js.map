{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SeachBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","console","log","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAYeA,G,MARK,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACnB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCQPC,G,MAVS,SAAAR,GACtB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHZM,G,MAJS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACrC,OAAQ,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCuCvEG,G,wDArCb,aAAe,IAAD,8BACZ,gBAkBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAlBrC,EAAKC,MAAQ,CACXb,SAAU,GAEVU,YAAa,IALH,E,iEASZI,QAAQC,IAAI,Y,0CAGO,IAAD,OAClBD,QAAQC,IAAI,SACZC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACT,SAAUoB,S,+BAQ1CN,QAAQC,IAAI,UADL,MAE2BM,KAAKR,MAA/Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBACpG,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CAAUW,YAAY,iBAAiBC,aAAciB,KAAKjB,eAC1D,yCACA,cAAC,EAAD,CAAUJ,SAAUsB,W,GAhCVI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1abc10e9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img alt='hero' src={`https://robohash.org/${props.monster.id}?set=set4&size=150x150`} />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n)\n\nexport default Card\n","import React from 'react';\n\nimport Card from '../card/card.component'\n\nimport './card-list.styles.css'\n\nexport const CardList = props => {\n  return(\n    <div className='card-list'>\n      {props.monsters.map(monster =>(\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SeachBox = ({placeholder, handleChange}) => {\n  return (<input type=\"search\" className=\"search\" placeholder={placeholder} onChange={handleChange}/>)\n}\n\nexport default SeachBox\n","import React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SeachBox from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [\n      ],\n      searchField: ''\n    }\n  }\n  componentDidUpdate() {\n    console.log('update')\n  }\n\n  componentDidMount() {\n    console.log('mount')\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    console.log('render')\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <SeachBox placeholder=\"search kittens\" handleChange={this.handleChange}/>\n        <h1>Kittens</h1>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}